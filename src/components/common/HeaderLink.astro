---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + subpath?.[0];
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
	<span><slot /></span>
</a>
<style>
  a {
    text-decoration: none;
    color: var(--text-color);
    font-weight: 600;
    line-height: 1.5rem;
    height: 1.5rem;
    transition: var(--hover-transition);
  }
  
  a.active span {
    opacity: 0;
  }
  
  a::before {
    content: '';
    background-color: var(--main-color);
    width: 0rem;
    height: 0rem;
    border-radius: 1rem;
    transition: var(--hover-transition);
  }

  a.active {
    display: flex;
    align-items: center;
  }

  a.active::before {
    display: block;
    width: .8rem;
    height: .8rem;
  }

  a:hover {
    color: var(--text-color-hover);
  }

  a:hover::before {
    background-color: var(--main-color-hover);
  }
</style>